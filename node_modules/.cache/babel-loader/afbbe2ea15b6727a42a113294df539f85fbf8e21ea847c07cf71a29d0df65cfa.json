{"ast":null,"code":"var _jsxFileName = \"/Users/duane/Documents/ERA Cohort/VeteransCyberSecurity/Github/Training/homework/messenger/reducer-repository/src/components/UserOne.jsx\",\n  _s = $RefreshSig$();\nimport React from 'react';\nimport { useToDo } from \"../hooks/ToDoContext\";\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport function UserOne() {\n  _s();\n  const {\n    state,\n    dispatch\n  } = useToDo(); //calling useToDo from ToDoContext as useContext\n  const {\n    userOneMessage,\n    setUserOneMessage\n  } = useToDo();\n  const handleChange = event => {\n    setUserOneMessage(event.target.value);\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"user-board\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        className: \"user-one-header\",\n        children: \"User One\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 15,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"message-board\",\n        children: state.messages.map(message => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: `userContent ${message.user === \"userOne\" ? 'userOne  right-side' : 'userTwo left-side'}`,\n          children: [\" \", /*#__PURE__*/_jsxDEV(\"p\", {\n            children: `${message.user === \"userOne\" ? message.userOneMessage : message.userTwoMessage}`\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 19,\n            columnNumber: 29\n          }, this)]\n        }, message.id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 18,\n          columnNumber: 25\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 16,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n        type: \"text\",\n        className: \"userOneInput\",\n        value: userOneMessage,\n        onChange: handleChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 19\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"userOneButton\",\n        onClick: () => {\n          dispatch({\n            type: \"USER\",\n            payload: {\n              id: Date.now(),\n              userOneMessage,\n              user: \"userOne\"\n            }\n          });\n          setUserOneMessage(\"\");\n        },\n        children: [\" \", \"Send\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 19\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 13\n    }, this)\n  }, void 0, false);\n}\n_s(UserOne, \"s6ucGb5kkhwJlLon1KkoK7RsOEA=\", false, function () {\n  return [useToDo, useToDo];\n});\n_c = UserOne;\nvar _c;\n$RefreshReg$(_c, \"UserOne\");","map":{"version":3,"names":["React","useToDo","jsxDEV","_jsxDEV","Fragment","_Fragment","UserOne","_s","state","dispatch","userOneMessage","setUserOneMessage","handleChange","event","target","value","children","className","fileName","_jsxFileName","lineNumber","columnNumber","messages","map","message","user","userTwoMessage","id","type","onChange","onClick","payload","Date","now","_c","$RefreshReg$"],"sources":["/Users/duane/Documents/ERA Cohort/VeteransCyberSecurity/Github/Training/homework/messenger/reducer-repository/src/components/UserOne.jsx"],"sourcesContent":["import React from 'react';\nimport {useToDo} from \"../hooks/ToDoContext\";\n\nexport function UserOne (){\n    const {state, dispatch} = useToDo(); //calling useToDo from ToDoContext as useContext\n    const {userOneMessage, setUserOneMessage} = useToDo();\n    \n    const handleChange = (event) => {\n        setUserOneMessage(event.target.value);\n      };\n\n    return (\n        <>\n            <div className=\"user-board\">\n                <h1 className=\"user-one-header\">User One</h1>\n                <div className=\"message-board\">\n                {state.messages.map((message) => (     \n                        <div key= {message.id} className= { `userContent ${message.user === \"userOne\" ? 'userOne  right-side': 'userTwo left-side'}` }> {/*since I am combining a value with a string, I had to create it with {} */}\n                            <p>{`${message.user === \"userOne\" ? message.userOneMessage: message.userTwoMessage}`}</p>\n                        </div>\n                      ))}            \n                  </div>\n                  <textarea \n                      type=\"text\" \n                      className=\"userOneInput\"\n                      value={userOneMessage}\n                       onChange={handleChange}>\n                  </textarea>\n                  <button className=\"userOneButton\"\n                      onClick = {() => {\n                          dispatch ({\n                              type:\"USER\", \n                              payload:{ \n                                  id: Date.now(), \n                                  userOneMessage, \n                                  user:\"userOne\"\n                              } \n                          });\n                      setUserOneMessage(\"\") \n                      }}> {/*since I create payload as an object of two, it will return me as an object */} \n                      Send\n                  </button>\n            </div>\n        </>\n    )\n}"],"mappings":";;AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAAQC,OAAO,QAAO,sBAAsB;AAAC,SAAAC,MAAA,IAAAC,OAAA,EAAAC,QAAA,IAAAC,SAAA;AAE7C,OAAO,SAASC,OAAOA,CAAA,EAAG;EAAAC,EAAA;EACtB,MAAM;IAACC,KAAK;IAAEC;EAAQ,CAAC,GAAGR,OAAO,CAAC,CAAC,CAAC,CAAC;EACrC,MAAM;IAACS,cAAc;IAAEC;EAAiB,CAAC,GAAGV,OAAO,CAAC,CAAC;EAErD,MAAMW,YAAY,GAAIC,KAAK,IAAK;IAC5BF,iBAAiB,CAACE,KAAK,CAACC,MAAM,CAACC,KAAK,CAAC;EACvC,CAAC;EAEH,oBACIZ,OAAA,CAAAE,SAAA;IAAAW,QAAA,eACIb,OAAA;MAAKc,SAAS,EAAC,YAAY;MAAAD,QAAA,gBACvBb,OAAA;QAAIc,SAAS,EAAC,iBAAiB;QAAAD,QAAA,EAAC;MAAQ;QAAAE,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,eAC7ClB,OAAA;QAAKc,SAAS,EAAC,eAAe;QAAAD,QAAA,EAC7BR,KAAK,CAACc,QAAQ,CAACC,GAAG,CAAEC,OAAO,iBACpBrB,OAAA;UAAuBc,SAAS,EAAK,eAAcO,OAAO,CAACC,IAAI,KAAK,SAAS,GAAG,qBAAqB,GAAE,mBAAoB,EAAG;UAAAT,QAAA,GAAC,GAAC,eAC5Hb,OAAA;YAAAa,QAAA,EAAK,GAAEQ,OAAO,CAACC,IAAI,KAAK,SAAS,GAAGD,OAAO,CAACd,cAAc,GAAEc,OAAO,CAACE,cAAe;UAAC;YAAAR,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAI,CAAC;QAAA,GADlFG,OAAO,CAACG,EAAE;UAAAT,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAEhB,CACN;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACD,CAAC,eACNlB,OAAA;QACIyB,IAAI,EAAC,MAAM;QACXX,SAAS,EAAC,cAAc;QACxBF,KAAK,EAAEL,cAAe;QACrBmB,QAAQ,EAAEjB;MAAa;QAAAM,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAClB,CAAC,eACXlB,OAAA;QAAQc,SAAS,EAAC,eAAe;QAC7Ba,OAAO,EAAIA,CAAA,KAAM;UACbrB,QAAQ,CAAE;YACNmB,IAAI,EAAC,MAAM;YACXG,OAAO,EAAC;cACJJ,EAAE,EAAEK,IAAI,CAACC,GAAG,CAAC,CAAC;cACdvB,cAAc;cACde,IAAI,EAAC;YACT;UACJ,CAAC,CAAC;UACNd,iBAAiB,CAAC,EAAE,CAAC;QACrB,CAAE;QAAAK,QAAA,GAAC,GAAC,EAAiF,MAEzF;MAAA;QAAAE,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACV;EAAC,gBACR,CAAC;AAEX;AAACd,EAAA,CA1CeD,OAAO;EAAA,QACOL,OAAO,EACWA,OAAO;AAAA;AAAAiC,EAAA,GAFvC5B,OAAO;AAAA,IAAA4B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}