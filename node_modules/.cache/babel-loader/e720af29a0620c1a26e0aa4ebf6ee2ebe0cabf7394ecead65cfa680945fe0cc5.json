{"ast":null,"code":"var _jsxFileName = \"/Users/duane/Documents/ERA Cohort/VeteransCyberSecurity/Github/messenger_react/src/components/UserOne.jsx\";\nimport React from 'react';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport function UserOne() {\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"user-board\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        className: \"user-one-header\",\n        children: \"User One\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 7,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"message-board\",\n        children: state.messages.map(message => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: `userContent ${message.user === \"userOne\" ? 'userOne  right-side' : 'userTwo left-side'}`,\n          children: [\" \", /*#__PURE__*/_jsxDEV(\"p\", {\n            children: `${message.user === \"userOne\" ? message.userOneMessage : message.userTwoMessage}`\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 11,\n            columnNumber: 29\n          }, this)]\n        }, message.id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 10,\n          columnNumber: 25\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 8,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n        type: \"text\",\n        className: \"userOneInput\",\n        value: userOneMessage,\n        onChange: handleChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 15,\n        columnNumber: 19\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"userOneButton\",\n        onClick: () => {\n          dispatch({\n            type: \"USER\",\n            payload: {\n              id: Date.now(),\n              userOneMessage,\n              user: \"userOne\"\n            }\n          });\n          setUserTwoMessage(\"\");\n        },\n        children: [\" \", \"Send\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 21,\n        columnNumber: 19\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 6,\n      columnNumber: 13\n    }, this)\n  }, void 0, false);\n}\n_c = UserOne;\nvar _c;\n$RefreshReg$(_c, \"UserOne\");","map":{"version":3,"names":["React","jsxDEV","_jsxDEV","Fragment","_Fragment","UserOne","children","className","fileName","_jsxFileName","lineNumber","columnNumber","state","messages","map","message","user","userOneMessage","userTwoMessage","id","type","value","onChange","handleChange","onClick","dispatch","payload","Date","now","setUserTwoMessage","_c","$RefreshReg$"],"sources":["/Users/duane/Documents/ERA Cohort/VeteransCyberSecurity/Github/messenger_react/src/components/UserOne.jsx"],"sourcesContent":["import React from 'react';\n\nexport function UserOne (){\n    return (\n        <>\n            <div className=\"user-board\">\n                <h1 className=\"user-one-header\">User One</h1>\n                <div className=\"message-board\">\n                {state.messages.map((message) => (     \n                        <div key= {message.id} className= { `userContent ${message.user === \"userOne\" ? 'userOne  right-side': 'userTwo left-side'}` }> {/*since I am combining a value with a string, I had to create it with {} */}\n                            <p>{`${message.user === \"userOne\" ? message.userOneMessage: message.userTwoMessage}`}</p>\n                        </div>\n                      ))}            \n                  </div>\n                  <textarea \n                      type=\"text\" \n                      className=\"userOneInput\"\n                      value={userOneMessage}\n                       onChange={handleChange}>\n                  </textarea>\n                  <button className=\"userOneButton\"\n                      onClick = {() => {\n                          dispatch ({\n                              type:\"USER\", \n                              payload:{ \n                                  id: Date.now(), \n                                  userOneMessage, \n                                  user:\"userOne\"\n                              } \n                          });\n                      setUserTwoMessage(\"\") \n                      }}> {/*since I create payload as an object of two, it will return me as an object */} \n                      Send\n                  </button>\n            </div>\n        </>\n    )\n}"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA,EAAAC,QAAA,IAAAC,SAAA;AAE1B,OAAO,SAASC,OAAOA,CAAA,EAAG;EACtB,oBACIH,OAAA,CAAAE,SAAA;IAAAE,QAAA,eACIJ,OAAA;MAAKK,SAAS,EAAC,YAAY;MAAAD,QAAA,gBACvBJ,OAAA;QAAIK,SAAS,EAAC,iBAAiB;QAAAD,QAAA,EAAC;MAAQ;QAAAE,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,eAC7CT,OAAA;QAAKK,SAAS,EAAC,eAAe;QAAAD,QAAA,EAC7BM,KAAK,CAACC,QAAQ,CAACC,GAAG,CAAEC,OAAO,iBACpBb,OAAA;UAAuBK,SAAS,EAAK,eAAcQ,OAAO,CAACC,IAAI,KAAK,SAAS,GAAG,qBAAqB,GAAE,mBAAoB,EAAG;UAAAV,QAAA,GAAC,GAAC,eAC5HJ,OAAA;YAAAI,QAAA,EAAK,GAAES,OAAO,CAACC,IAAI,KAAK,SAAS,GAAGD,OAAO,CAACE,cAAc,GAAEF,OAAO,CAACG,cAAe;UAAC;YAAAV,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAI,CAAC;QAAA,GADlFI,OAAO,CAACI,EAAE;UAAAX,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAEhB,CACN;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACD,CAAC,eACNT,OAAA;QACIkB,IAAI,EAAC,MAAM;QACXb,SAAS,EAAC,cAAc;QACxBc,KAAK,EAAEJ,cAAe;QACrBK,QAAQ,EAAEC;MAAa;QAAAf,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAClB,CAAC,eACXT,OAAA;QAAQK,SAAS,EAAC,eAAe;QAC7BiB,OAAO,EAAIA,CAAA,KAAM;UACbC,QAAQ,CAAE;YACNL,IAAI,EAAC,MAAM;YACXM,OAAO,EAAC;cACJP,EAAE,EAAEQ,IAAI,CAACC,GAAG,CAAC,CAAC;cACdX,cAAc;cACdD,IAAI,EAAC;YACT;UACJ,CAAC,CAAC;UACNa,iBAAiB,CAAC,EAAE,CAAC;QACrB,CAAE;QAAAvB,QAAA,GAAC,GAAC,EAAiF,MAEzF;MAAA;QAAAE,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACV;EAAC,gBACR,CAAC;AAEX;AAACmB,EAAA,GAnCezB,OAAO;AAAA,IAAAyB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}